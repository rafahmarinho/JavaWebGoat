trigger: none

variables:
  group: 'Veracode Api Key' 
  PROJECT: 'LabTeste'
  ENVIRONMENT: 'Prod'
  BUILD_ID: 'latest'
  ENVIRONMENT_PARAM: 'prod'

stages:
  - stage: AutoPack
    displayName: AutoPack
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-22.04'
        steps:
          - checkout: self

          - bash: |
              curl -fsS https://tools.veracode.com/veracode-cli/install | sh
              ./veracode package --source . --output artifacts/$(BUILD_ID) --trust

              # Extrai todos os zips encontrados recursivamente
              find artifacts/$(BUILD_ID) -type f -name "*.zip" | while read filename; do
                unzip -o -d "$(dirname "$filename")" "$filename"
              done

              # Remove todos os zips encontrados recursivamente
              find artifacts/$(BUILD_ID) -type f -name "*.zip" -delete

              # Gera o analysisPack.zip com todo o conteúdo do output
              cd artifacts/$(BUILD_ID)
              zip -r analysisPack.zip .
              cd -
            displayName: Instalar CLI e Autopack Veracode

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'artifacts/$(BUILD_ID)'
              ArtifactName: 'analysisPack'
              publishLocation: 'Container'

  - stage: SCA
    displayName: Veracode SCA
    jobs:
      - job: SCA
        pool:
          vmImage: 'ubuntu-22.04'
        steps:
          - checkout: self
          - bash: curl -sSL https://download.sourceclear.com/ci.sh | bash -s -- scan --update-advisor --allow-dirty
            env:
              SRCCLR_API_TOKEN: $(SRCCLR_API_TOKEN)

  - stage: Scan
    displayName: Veracode Scan
    dependsOn: AutoPack
    jobs:
      - job: Scan
        pool:
          vmImage: 'ubuntu-22.04'
        steps:
          - download: current
            artifact: analysisPack

          - bash: |
              echo "Diretório de trabalho atual: $(pwd)"
              echo "Pipeline Workspace: $PIPELINE_WORKSPACE"
              echo "Listando conteúdo do Pipeline.Workspace:"
              ls -la $PIPELINE_WORKSPACE || echo "Pipeline.Workspace não encontrado"
              echo "Listando conteúdo do artefato analysisPack:"
              ls -la $PIPELINE_WORKSPACE/analysisPack/ || echo "Diretório analysisPack não encontrado"
              echo "Procurando por analysisPack.zip em todo o workspace:"
              find $PIPELINE_WORKSPACE -name "*.zip" -type f || echo "Nenhum arquivo .zip encontrado"
              
              # Procura o arquivo no local correto dos artefatos
              ARTIFACT_PATH="$(find $PIPELINE_WORKSPACE/analysisPack -type f -name 'analysisPack.zip' | head -n1)"
              if [ -f "$ARTIFACT_PATH" ]; then
                echo "Arquivo encontrado: $ARTIFACT_PATH"
                echo "##vso[task.setvariable variable=artifact_file]$ARTIFACT_PATH"
              else
                echo "Erro: analysisPack.zip não encontrado no diretório de artefatos"
                echo "Tentando procurar em outros locais..."
                ARTIFACT_PATH="$(find $PIPELINE_WORKSPACE -type f -name 'analysisPack.zip' | head -n1)"
                if [ -f "$ARTIFACT_PATH" ]; then
                  echo "Arquivo encontrado em: $ARTIFACT_PATH"
                  echo "##vso[task.setvariable variable=artifact_file]$ARTIFACT_PATH"
                else
                  echo "analysisPack.zip não encontrado em lugar nenhum"
                  exit 1
                fi
              fi
            displayName: Detectar Arquivo
            env:
              PIPELINE_WORKSPACE: $(Pipeline.Workspace)


          - bash: veracode-pipeline-scan -vid $VERACODE_APIID -vkey $VERACODE_APIKEY -file $ARTIFACT_FILE -fail_build true
            displayName: Executar Veracode Pipeline Scan
            env:
              VERACODE_APIID: $(APIID)
              VERACODE_APIKEY: $(APIKEY)
              ARTIFACT_FILE: $(artifact_file)

  - stage: SAST
    displayName: Veracode SAST
    dependsOn: AutoPack
    jobs:
      - job: SAST
        pool:
          vmImage: 'ubuntu-22.04'
        steps:
          - download: current
            artifact: analysisPack

          - bash: curl -O -L https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/24.7.14.0/vosp-api-wrappers-java-24.7.14.0.jar
            displayName: Baixar Wrapper

          - bash: |
              declare -A PROJECT_MAP=( ["nomeprojeto1"]="novonomeprojeto" ["nomeprojeto02"]="novonomeprojeto02" )
              FINAL_PROJ=${PROJECT_MAP[$PROJECT_NAME]:-$PROJECT_NAME}
              echo "##vso[task.setvariable variable=PROJECT_SUB]$FINAL_PROJ"
            displayName: Substituir Nome do Projeto
            env:
              PROJECT_NAME: $(PROJECT)

          - bash: |
              echo "Diretório de trabalho atual: $(pwd)"
              echo "Pipeline Workspace: $PIPELINE_WORKSPACE"
              echo "Listando conteúdo do Pipeline.Workspace:"
              ls -la $PIPELINE_WORKSPACE || echo "Pipeline.Workspace não encontrado"
              echo "Listando conteúdo do artefato analysisPack:"
              ls -la $PIPELINE_WORKSPACE/analysisPack/ || echo "Diretório analysisPack não encontrado"
              echo "Procurando por analysisPack.zip em todo o workspace:"
              find $PIPELINE_WORKSPACE -name "*.zip" -type f || echo "Nenhum arquivo .zip encontrado"
              
              # Procura o arquivo no local correto dos artefatos
              ARTIFACT_PATH="$(find $PIPELINE_WORKSPACE/analysisPack -type f -name 'analysisPack.zip' | head -n1)"
              if [ -f "$ARTIFACT_PATH" ]; then
                echo "Arquivo encontrado: $ARTIFACT_PATH"
                echo "##vso[task.setvariable variable=artifact_file]$ARTIFACT_PATH"
              else
                echo "Erro: analysisPack.zip não encontrado no diretório de artefatos"
                echo "Tentando procurar em outros locais..."
                ARTIFACT_PATH="$(find $PIPELINE_WORKSPACE -type f -name 'analysisPack.zip' | head -n1)"
                if [ -f "$ARTIFACT_PATH" ]; then
                  echo "Arquivo encontrado em: $ARTIFACT_PATH"
                  echo "##vso[task.setvariable variable=artifact_file]$ARTIFACT_PATH"
                else
                  echo "analysisPack.zip não encontrado em lugar nenhum"
                  exit 1
                fi
              fi
              
              echo "Executando Veracode SAST com arquivo: $ARTIFACT_FILE"
              echo "APIID: $VERACODE_APIID"
              echo "Environment: $ENV_PARAM"
              
              if [ "$ENV_PARAM" == "prod" ]; then
                java -jar vosp-api-wrappers-java-24.7.14.0.jar \
                  -vid $VERACODE_APIID -vkey $VERACODE_APIKEY \
                  -action uploadandscan \
                  -appname "$PROJECT_NAME" \
                  -version "$BUILD_VERSION" \
                  -filepath "$ARTIFACT_FILE" \
                  -createprofile true \
                  -deleteincompletescan 2 \
                  -createsandbox false
              else
                java -jar vosp-api-wrappers-java-24.7.14.0.jar \
                  -vid $VERACODE_APIID -vkey $VERACODE_APIKEY \
                  -action uploadandscan \
                  -appname "$PROJECT_NAME" \
                  -version "$BUILD_VERSION" \
                  -filepath "$ARTIFACT_FILE" \
                  -createprofile true \
                  -deleteincompletescan 2 \
                  -createsandbox true \
                  -sandboxname "$ENV_PARAM"
              fi
            displayName: Executar Veracode SAST
            env:
              PIPELINE_WORKSPACE: $(Pipeline.Workspace)
              ARTIFACT_FILE: $(artifact_file)
              VERACODE_APIID: $(APIID)
              VERACODE_APIKEY: $(APIKEY)
              PROJECT_NAME: $(PROJECT_SUB)
              BUILD_VERSION: $(BUILD_ID)
              ENV_PARAM: $(ENVIRONMENT_PARAM)
